【応用_午前_過去問】システム開発技術_メモ


計算
〔問５〕
〔問９〕
〔問12〕
〔問53〕
〔問55〕
〔問57〕
〔問63〕
〔問70〕
〔問77〕
〔問81〕
〔問86〕
〔問93〕
〔問98〕
〔問99〕
〔問104〕



モジュール
〔問17〕
〔問28〕
〔問51〕
〔問78〕
〔問80〕
〔問85〕
〔問97〕


※保守に関して
〔問31〕
〔問47〕
〔問54〕

※ER図
〔問77〕




〔問１〕
コミュニケーション図


〔問４〕
データ中心分析・設計技法
：データの構造を重視してシステムを設計する手法
プロセス中心アプローチ
：システムの「処理（プロセス）」を重視して設計する手法
オブジェクト指向アプローチ
：データ（オブジェクト）と、それに関連する処理（メソッド）を一体化して設計する手法


〔問６〕
ダイナミックテスタ↔静的テスト
：ソフトウェアの実行中の動作を確認するためのテストツールや手法のことで、「プログラムを実際に動かして、バグや問題を検出する」テストを行う



〔問７〕
サンドイッチテスト
： トップダウンテストとボトムアップテストを組み合わせた統合テスト手法




〔問11〕
静的テスト
：プログラムを実行せずにコードや設計をチェックするテスト手法
静的解析
：ツールを使ってプログラムのコードを解析し、バグや脆弱性を発見する手法
コードオーディタ(Code Auditor)
：プログラムの品質やコーディング規約をチェックするツール

〔問13〕
デザインレビュー
：ソフトウェアやハードウェアの設計段階で、問題点を早期に発見するためのレビュー（検討会）


〔問15〕
SysML(Systems Modeling Language)
：システム設計のためのモデリング言語で、UML（Unified Modeling Language）を拡張し、ハードウェアやソフトウェアを含む複雑なシステムの設計を支援する
FPGA(Field Programmable Gate Array)
：書き換え可能なハードウェア回路を持つ集積回路（IC）で、ソフトウェアのようにプログラムを変更して回路の動作を自由にカスタマイズできる。
SystemC
：C++をベースにしたハードウェア設計・シミュレーション用の記述言語で、ハードウェアとソフトウェアを同時に設計（システムレベル設計）できる。
VHDL・Verilog-HDL
：デジタル回路の動作を記述するためのハードウェア記述言語（HDL）
VHDL（VHSIC Hardware Description Language）

〔問17〕
モジュール強度


〔問21〕
構造化技法
：ソフトウェア開発を体系的に進めるための手法の総称
主に「構造化分析」「構造化設計」「構造化プログラミング」の3つから構成される
構造化設計
：構造化技法の中でも、「設計」に特化した手法。
特に、大規模なソフトウェアをモジュール（部品）単位に分割し、階層構造を作る。


〔問22〕
ステートチャート図
：状態遷移図の拡張版


〔問25〕
原因結果グラフ
限界値分析
同値分割
分岐網羅



〔問26〕
CRUDマトリクス
：データベースやシステムの**操作（Create, Read, Update, Delete）**に関する関係を表すための表（マトリクス）

※マトリクス
：行と列で構成された表形式のデータ構造を指します。この場合、縦軸（行）にはデータの種類（エンティティ）、横軸（列）にはCRUD操作が並べられ、それぞれの交点でどの操作が行われるかを記入



〔問28〕
●モジュール結合度(Coupling)
：モジュール間の依存関係に関する評価
高い結束度を持つモジュールは、同じ種類の処理や機能を持つものが集まっているため、一貫性があり、理解しやすく、変更しやすいです。
高い結束度: モジュール内部の処理が強く関連している場合（例: ある処理に特化したモジュール）
低い結束度: モジュール内部の処理が関連性が低い場合（例: 異なる機能が集まった汎用的なモジュール）
●モジュール結束度(Cohesion)
：モジュール内部の関連性や一貫性に関する評価
低い結合度: モジュール間の依存が少ない場合（例: インターフェースを使って通信するモジュール）
高い結合度: モジュール間の依存が強い場合（例: 直接的にデータを共有するモジュール）


〔問32〕
構造化チャート
：システムのモジュールの階層的な構造を視覚的に示し、システム全体のフローを理解するのに役立つ
HIPO(Hierarchy plus Input Output)
：システムやプログラムを階層的に表現し、各モジュールの入力と出力を示して、システム全体の設計を簡潔に把握できるようにする


〔問33〕
回帰テスト(リグレッションテスト)
：ソフトウェアの変更後に既存の機能が意図しない影響を受けていないかを確認するためのテスト
主に、ソフトウェアに新しい機能を追加したり、バグを修正したりした後に、既存の機能が正しく動作するかを確認することを目的

〔問34〕
配置図


〔問35〕
ツールレス保守
：特別なツールやソフトウェアを使わずに、システムやソフトウェアの保守・管理を行うことを指す
システムの保守には専用のツールが使われますが、ツールレス保守では、それらを使わずに手動で管理や修正を行う方法


〔問38〕
Broker
：分散システムにおいて、システム内の異なるコンポーネント間で通信を仲介する役割を担うアーキテクチャパターン
メッセージの送受信や、データのルーティングを担当し、システムのコンポーネント間の疎結合を実現する
Layers
：ソフトウェアを複数の階層（レイヤー）に分け、各レイヤーが異なる機能を担当するアーキテクチャパターン
各レイヤーが独立して開発・変更・テストできるようになり、システムの保守性が向上する
Pipes and Filters
：データ処理を一連のフィルターで行い、フィルター間をパイプで接続するアーキテクチャパターン
このパターンは、処理が順次行われるプロセスに適しており、データフローを簡潔にモデル化できる


〔問46〕
スナップショットダンプ
：システムやプログラムの状態を一時的に記録することを指す
主に、プログラムが異常終了したり、デバッグが必要な場合に使用され、実行中の状態（メモリ、スタック、レジスタの内容など）をキャプチャして、後で詳細に分析するための情報を提供する



〔問48〕
帳票設計
：業務で使用する帳票（報告書、請求書、納品書、領収書など）を作成するための設計・計画のこと






〔問56〕
ペトリネット
：システムやプロセスの動作をモデル化し、可視化するための数学的な手法
STS分割(Symbolic Transition System Decomposition)
：ペトリネットの状態空間（State Space）を小さな部分に分割して解析する手法


〔問58〕
アサーションチェック
：コードの正しさを確認するための検証手法
アサーション（assert） という条件をコード内に記述し、その条件が満たされているかを実行時にチェック
条件が満たされない場合、エラー（AssertionErrorを発生させることで、バグの早期発見に役立ちます。
コード追跡
：コードの実行過程をステップごとに追い、動作を確認する手法
デバッガーを使って、プログラムの変数の値や処理の流れを確認
ログを出力して、どこで問題が発生しているかを把握
テストカバレッジ分析
：テストがコードのどの部分を実行しているかを測定する手法
カバレッジが高い（100%に近い）ほど、テストが網羅的に行われている ことを示す
低い場合は、未テストの部分があり、バグが潜んでいる可能性がある



〔問60〕
FTA(Fault Tree Analysis：フォールトツリー解析)
：システムやプロセスの障害（故障）が発生する原因を論理的に分析する手法
FMEA(Failure Mode and Effects Analysis：故障モード影響解析)
：システムや製品の故障モード（どのように壊れるか）を特定し、その影響を分析する手法
故障の影響を事前に評価し、未然に防ぐ」 のが目的
RCA(Root Cause Analysis：根本原因分析)
：問題が発生した際に、その本当の原因（根本原因）を特定し、再発防止策を考えるための分析手法 
ODC(Orthogonal Defect Classification Analysis：直交欠陥分類分析)
：ソフトウェアのバグや欠陥を効率的に分類し、品質向上のためのパターンを分析する手法


〔問64〕
ラウンドロビン
：各レビュアーが順番に発言する
ウォークスルー
：作成者が説明し、チームがフィードバック
インスペクション
：モデレーターが進行し、チェックリストを用いる


〔問69〕
パスアラウンド
：レビュー対象の資料（コードや設計書など）を関係者に回覧し、各自がコメントや修正提案を記入する方式


〔問70〕
分岐網羅



〔問86〕
2段階エディット法
：文章やコードの品質を向上させるために、2つのステップで見直しと修正を行う方法



〔問94〕
ペトリネット
：並行処理（コンカレンシー）をモデル化できる数学的なネットワーク








〔問101〕
エキスパートシステム





〔問１〕
〔問１〕
〔問１〕
〔問１〕
〔問１〕
〔問１〕
〔問１〕
〔問１〕
〔問１〕
〔問１〕
〔問１〕
〔問１〕
〔問１〕









RISCアーキテクチャ(Reduced Instruction Set Computer)
：シンプルで少ない命令セットを持つプロセッサの設計思想
MPU(Microprocessor Unit)
：コンピュータの中央演算処理装置（CPU）を1つのICチップに集積したもの





〔問４〕
パイプラインピッチ
：CPUのパイプライン処理において、連続して発行される命令の間隔
パイプラインの深さ
：1つの命令が完了するまでに通るステージの数


〔問８〕

ソフトコアプロセッサ
：FPGA（Field Programmable Gate Array）などの再構成可能なハードウェア上に実装される、プログラムで定義されたプロセッサ
ヘテロジニアスマルチコアプロセッサ
：異なる種類のコア（CPUコアやGPUコアなど）を組み合わせたプロセッサのことで、例えば、高性能なコア（Big）と省電力なコア（LITTLE）を組み合わせたArmのbig.LITTLE
ホモジニアスマルチコアプロセッサ
：同じ種類・性能のコアを複数搭載したプロセッサのことで、例えば、IntelやAMDの一般的なマルチコアCPUは、複数の同一性能のコアで並列処理を行う

〔問11〕
バイト単位
：1バイトずつデータを読み書き（柔軟だがフラッシュメモリでは不可）
ページ単位
：一定サイズ（数KB）ごとに読み書き（フラッシュメモリの基本動作）、書き換え時にはページ全体を消去して再書き込みする必要がある


〔問13〕
ウェアレベリング
：フラッシュメモリの特定のセルが偏って劣化しないように、書き込み回数を均等に分散させる技術


〔問14〕
プラズマディスプレイパネル
：ガス放電
液晶ディスプレイ
：トランジスタ
有機ELディスプレイ
：電圧
CRTディスプレイ
：電子ビーム


〔問19〕
ライトバッファ
：データを記憶装置（SSDやRAMなど）に書き込む前に、一時的に保存しておくメモリ領域
ライトプロテクト
：記憶装置に対する書き込みを禁止する機能


〔問21〕
ページ単位
：データの読み取り・書き込みの基本単位（例: 4KB, 8KB）
ブロック単位
：複数のページをまとめた大きな単位で、消去はブロック単位でしかできない（例: 128KB, 256KB）



〔問22〕
exFAT(Extended File Allocation Table)
：Microsoftが開発したファイルシステムの一つで、FAT32の制限を改善しつつ、NTFSよりもシンプルな構造を持つ、大容量データを扱うUSBメモリや外付けストレージに適した、軽量で互換性の高いファイルシステム


〔問34〕
MMU(Memory Management Unit)
：CPUとメモリの間にあるハードウェアで、仮想アドレスを物理アドレスに変換（アドレス変換）し、メモリ管理を行う装置



〔問40〕
相変化メモリ
：物質の相変化（アモルファス⇄結晶）を利用してデータを記録する不揮発性メモリ




〔問43〕
ユニファイドメモリ
：CPUとGPUが同じメモリ空間を共有する技術



〔問45〕
ZigBee
：低消費電力・短距離通信に特化した無線通信規格


〔問48〕
Dhrystone
：コンピュータの性能評価のためのベンチマークプログラムで、主に整数演算の処理性能を測定するために使用
FLOPS(Floating Point Operations Per Second)
：コンピュータの浮動小数点演算処理能力を示す性能指標で、1秒間に実行できる浮動小数点演算の回数を意味する
演算能力を示す非常に重要な指標で、特にスーパーコンピュータやAI向けハードウェアの性能評価に使用
SPECint(Standard Performance Evaluation Corporation Integer)
：整数演算を重視した性能ベンチマークで、コンピュータの処理能力を評価するための指標の一つ
複数の整数ベースのタスクを使用して、システムの効率性や速度を評価する際に使われる










【応用_午前_過去問】コンピュータ構成要素②

〔問１〕
有機色素
：有機化合物の一種で、色を持つ分子、有機化学物質から作られた色素
ピット
：一般的には凹みや穴を指し、文脈によって鉱物、果物、技術関連など
記録媒体（例：CDやDVD）の表面に存在する小さな凹み



〔問２〕
ATAPI(AT Attachment Packet Interface)
：CD/DVDドライブやテープドライブなどのストレージデバイスをIDE（ATA）インターフェースで接続するための規格


〔問５〕
バックプレーン
：複数の拡張カードやモジュールを接続するための基板（ボード）

〔問７〕
FireWire
：高速データ転送を可能にするシリアル通信規格で、正式には IEEE 1394 として標準化されている

〔問12〕
SMP(Symmetric Multi-Processing)
：複数のCPU（プロセッサ）が対等な関係で動作するコンピュータのアーキテクチャ



〔問15〕
CISC(Complex Instruction Set Computer)
：複雑な命令セットを持つプロセッサの設計、1つの命令で複雑な処理を実行できる」ことが特徴で、x86系（Intel, AMD）CPUなどに採用


〔問16〕
レジスタリネーミング
：CPU内部でレジスタの名前を一時的に変更し、同じレジスタを使う命令同士の競合を回避する技術


〔問26〕
アクティブシャッタ方式
：3D映像を表示する技術の1つ で、液晶シャッターを高速に開閉することで左右の目に異なる映像を見せる 方法
パララックスバリア方式
アナグリフ方式
偏光フィルター方式

〔問33〕
電気泳動型電子ペーパー
：電子インク（E Ink）を利用したディスプレイ技術の一種 で、主に 電子書籍リーダー（Kindleなど） に使われている、電圧で白黒の粒子を動かし、紙のような表示を実現
MEMS(Micro Electro Mechanical Systems)


〔問38〕
ジャーナリング
：ファイルシステムの安全性を向上させる仕組み で、データの変更履歴（ジャーナル）を記録して、システムクラッシュ時のデータ損失を防ぐ 技術。
デフラグ
：HDD（ハードディスク）の断片化したデータを整理して、読み書きの効率を向上させる処理。
ライトアンプリフィケーション(Write Amplification, WA)
：SSDにおいて、書き込み回数が増えてしまう現象。

〔問47〕
マルチコアCPU
FPU(Floating Point Unit：浮動小数点演算装置)

〔問50〕
DisplayPort
DVI
HDCP




【応用_午前_過去問】コンピュータ構成要素③






〔問26〕
〔問26〕






☆☆☆☆






















